version: '2.4'

volumes:
  public:
    driver: local

services:
  # Test environment
  test:
    build:
      context: .
      dockerfile: Dockerfile
      target: test
    image: test
  test-integration:
    extends:
      service: test
    depends_on:
      db:
        condition: service_healthy
    environment:
      DJANGO_SETTINGS_MODULE: todobackend.settings.test
      TEST_OUTPUT_DIR: /reports
      MYSQL_HOST: db
      MYSQL_USER: root
      MYSQL_PASSWORD: password
  # Database service
  db:
    image: mariadb:10.5
    healthcheck:
      test: mysqlshow -u $$MYSQL_USER -p$$MYSQL_PASSWORD
      interval: 3s
      retries: 10
    environment:
      MYSQL_DATABASE: todobackend
      MYSQL_USER: todo
      MYSQL_PASSWORD: password
      MYSQL_ROOT_PASSWORD: password
  # Acceptance tests
  acceptance:
    extends:
      service: test
    depends_on:
      release-app:
        condition: service_healthy
    environment:
      TEST_URL: http://release-app:8000/todos
    working_dir: /app
    command:
      - pytest
      - tests/acceptance
      - -v
      - --junitxml=/reports/acceptance.xml
  # Release environment
  release:
    build:
      context: .
      dockerfile: Dockerfile
      target: release
    image: release
    environment:
      DEBUG: 'true'
      DJANGO_SETTINGS_MODULE: todobackend.settings.release
      MYSQL_HOST: db
      MYSQL_USER: todo
      MYSQL_PASSWORD: password
  release-app:
    extends:
      service: release
    depends_on:
      release-migrate:
        condition: service_completed_successfully
      release-content:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    healthcheck:
      test: curl -fs localhost:8000
      interval: 3s
      retries: 10
    volumes:
      - public:/public
    ports:
      - 8000:8000
    command:
      - uwsgi
      - --http=0.0.0.0:8000
      - --module=todobackend.wsgi
      - --master
      - --check-static=/public
      - --die-on-term
      - --processes=4
      - --threads=10
  release-content:
    extends:
      service: release
    volumes:
      - public:/public
    command:
      - python
      - manage.py
      - collectstatic
      - --no-input
  release-migrate:
    extends:
      service: release
    depends_on:
      db:
        condition: service_healthy
    command:
      - python
      - manage.py
      - migrate
      - --no-input